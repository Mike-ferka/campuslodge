generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Facility {
  id                    String     @id @default(uuid())
  title                 String     @db.Text
  userId String
  description           String     
  image                 String
  country               String
  state                 String
  city                  String
  locationDescription   String     

  // Relations
  equipment             Assets[]
  bookings              Booking[]
  category              Category[]
  vehicle               Vehicles[]
  auditorium            Auditorium[]
  classroom             Classroom[]

  addedAt               DateTime   @default(now())
  updatedAt             DateTime   @updatedAt

}

model Assets {
  id                  String    @id @default(uuid())
  title               String
  description         String    
  image               String
  assetCount          Int       @default(0)
  maintainancePrice   Int       @default(0)
  assetPrice          Int
  category            Category[]
  addedAt             DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  // Relations
  facilityId          String
  Facility            Facility   @relation(fields: [facilityId], references: [id], onDelete: Cascade)
  bookings            Booking[]

  @@index([facilityId])
}

model Booking {
  id                     String    @id @default(uuid())
  userName               String
  addedAt                DateTime  @default(now())
  startDate              DateTime
  endDate                DateTime
  currency               String
  maintainancefeeIncluded Boolean  @default(false)
  totalPrice             Int
  paymentStatus          Boolean   @default(false)
  paymentIntentId        String    @unique
  bookedAt               DateTime  @default(now())
  facilityOwnerId       String

  // Relations
  facilityId             String
  assetId                String
  Facility               Facility  @relation(fields: [facilityId], references: [id])
  Asset                  Assets    @relation(fields: [assetId], references: [id])

  @@index([assetId])
  @@index([facilityId])
}

model Category {
  id          Int           @id @default(autoincrement())
  vehicle     Vehicles[]
  auditorium  Auditorium[]
  classroom   Classroom[]
  facilities  Facility[]
  assets      Assets[]
}

model Classroom {
  id                 Int    @id @default(autoincrement())
  projector          Boolean @default(false)
  whiteboard         Boolean @default(false)
  microphone         Boolean @default(false)
  wifi               Boolean @default(false)
  aircondition       Boolean @default(false)
  fan                Boolean @default(false)
  deskandchairs      Boolean @default(false)
  lectern            Boolean @default(false)
  poweroutlets       Boolean @default(false)
  lightingcontrol    Boolean @default(false)
  computer           Boolean @default(false)

  Facility Facility[]

  Category Category[]
}

model Auditorium {
  id                 Int    @id @default(autoincrement())
  projector          Boolean @default(false)
  stageLighting      Boolean @default(false)
  speakers           Boolean @default(false)
  liveStreamEquip    Boolean @default(false)
  airCondition       Boolean @default(false)
  fan                Boolean @default(false)
  seats              Boolean @default(false)
  lectern            Boolean @default(false)
  backstageaccess    Boolean @default(false)
  wheelchairacess    Boolean @default(false)
  safety             Boolean @default(false)

  Facility Facility[]

  Category Category[]
}

model Vehicles {
  id             Int    @id @default(autoincrement())
  capacity       Int
  ac             Boolean @default(false)
  luggageStore   Boolean @default(false)
  driver         Boolean @default(false)
  firstAid       Boolean @default(false)
  usbport        Boolean @default(false)
  insurance      Boolean @default(false)
  tracking       Boolean @default(false)
  spareTyre      Boolean @default(false)

  Facility Facility[]

  Category Category[]
}
