
generator client {
  provider = "prisma-client-js"
    previewFeatures = ["fullTextSearch","fullTextIndex"]

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  hotels        Hotel[]
  bookings      Booking[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Hotel {
  id                  String     @id @default(uuid())
  title               String     @db.LongText
  description         String     @db.LongText
  image               String
  country             String
  state               String
  city                String
  locationDescription String     @db.LongText
  gym                 Boolean    @default(false)
  spa                 Boolean    @default(false)
  bar                 Boolean    @default(false)
  laundry            Boolean    @default(false)
  restaurant         Boolean    @default(false)
  shopping           Boolean    @default(false)
  freeParking        Boolean    @default(false)
  bikeRental         Boolean    @default(false)
  swimmingPool       Boolean    @default(false)
  coffeeShop         Boolean    @default(false)
  rooms              Room[]
  bookings           Booking[]
  owner              User       @relation(fields: [ownerId], references: [id])
  ownerId            String
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt

  @@fulltext([title, description])
}

model Room {
  id               String    @id @default(uuid())
  title            String
  description      String
  image            String
  guestCount       Int       @default(1)
  bathroomCount    Int       @default(1)
  kingBed          Int       @default(0)
  queenBed         Int       @default(0)
  breakFastPrice   Int       @default(0)
  roomPrice        Int
  roomService      Boolean   @default(false)
  tv               Boolean   @default(false)
  balcony          Boolean   @default(false)
  freeWifi         Boolean   @default(false)
  cityView         Boolean   @default(false)
  oceanView        Boolean   @default(false)
  mountainView     Boolean   @default(false)
  airConditioning  Boolean   @default(false)
  soundProofed     Boolean   @default(false)
  hotel            Hotel     @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId          String
  bookings         Booking[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Booking {
  id                 String    @id @default(uuid())
  user               User      @relation(fields: [userId], references: [id])
  userId             String
  room               Room      @relation(fields: [roomId], references: [id])
  roomId             String
  hotel              Hotel     @relation(fields: [hotelId], references: [id])
  hotelId            String
  startDate          DateTime
  endDate            DateTime
  breakFastIncluded  Boolean   @default(false)
  totalPrice         Int
  paymentStatus      Boolean   @default(false)
  paymentIntentId    String    @unique
  createdAt          DateTime  @default(now())

  @@index([hotelId])
  @@index([roomId])
  @@index([userId])
}